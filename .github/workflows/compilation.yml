name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build, run_release]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [[macos-latest, bash], [ubuntu-latest, bash], [windows-latest, msys2]]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[1] }} {0}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Ubuntu packages
      if: matrix.os[0] == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install texinfo bison flex gettext libgmp3-dev libmpfr-dev libmpc-dev
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install macOS packages
      if: matrix.os[0] == 'macos-latest'
      run: |
        brew update
        brew install texinfo bison flex gnu-sed gsl gmp mpfr libmpc
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install MSYS2 packages
      if: matrix.os[0] == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        install: |
          base-devel git make texinfo flex bison patch binutils mingw-w64-i686-gcc mpc-devel tar
          mingw-w64-i686-cmake mingw-w64-i686-make mingw-w64-i686-libogg
        update: true
        shell: msys2 {0}

    - name: Runs all the stages in the shell
      continue-on-error: false
      run: |
        export PS2DEV=$PWD/ps2dev
        export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
        export PATH="/usr/local/opt/bison/bin:$PATH"
        export PATH=$PATH:$PS2DEV/powerpc/bin
        ./toolchain.sh

    - name: Print version of executables
      run: |
        export PS2DEV=$PWD/ps2dev
        export PATH=$PATH:$PS2DEV/powerpc/bin
        powerpc-ps2-eabi-as --version
        powerpc-ps2-eabi-ld --version
        powerpc-ps2-eabi-gcc --version
